<?xml version="1.0"?>
<!--
  Copyright (C) 2019-2020 hnqiu. All rights reserved.
  Licensed under the BSD-3-Clause license. See LICENSE for details.
-->

<!--
  @brief: ex1_5.launch
  launch file to launch the Husky robot in a robocup world
  & use teleop keyboard to navigate the robot.
-->

<launch>
  <!-- GAZEBO ARGUMENTS -->
  <!-- Run Gazebo headless -->
  <arg name="headless"                              default="false"/>
  <!-- Model path -->
  <arg name="model_path"                            default="$(find smb_gazebo)/"/>
  <arg name="robot_namespace"                       default=""/>
  <arg name="robot_model_name"                      default="smb"/>
  <arg name="enable_ekf"                            default="true"/>

  <!-- Name of the world -->
  <arg name="world"                                 default="robocup14_spl_field"/>
  <!-- Path to the world file -->
  <arg name="world_file"                            default="$(find set_speed)/worlds/$(arg world).world"/>
  <arg name="laser_enabled"							            default="true"/>

  <!-- Set the initial pose of the robot's main body -->
  <arg name="x"                                     default="0.0"/>
  <arg name="y"                                     default="0.0"/>
  <arg name="z"                                     default="0.4"/>
  <arg name="roll"                                  default="0.0"/>
  <arg name="pitch"                                 default="0.0"/>
  <arg name="yaw"                                   default="0.0"/>
  <!-- Start paused -->
  <arg name="paused"                                default="false"/>
  <!-- Use simulation clock -->
  <arg name="use_sim_time"                          default="true"/>
  <!-- Debug mode -->
  <arg name="debug"                                 default="false"/>
  <!-- Verbose mode -->
  <arg name="verbose"                               default="true"/>

  <arg name="laser_scan_min_height"                  default="0.0"/>
  <arg name="laser_scan_max_height"                  default="0.1"/>

  <!-- GUI ARGUMENTS -->
  <!-- Enable/disable Gazebo GUI -->
  <arg name="run_gui"                               default="true"/>
  
  <!-- ROBOT ARGUMENTS -->
  <!-- Name of the robot description parameter -->
  <arg name="robot_description" default="robot_description"/>

  <!-- Control Robot Method -->
  <!-- teleop_twist_keyboard or pub_node -->
   <arg name="use_teleop_twist_keyboard" default="true"/>

  <!-- Load Gazebo world -->
  <include file="$(find smb_gazebo)/launch/smb_gazebo.launch">
    <arg name="headless"               value="$(arg headless)"/>
    <arg name="model_path"             value="$(arg model_path)"/>
    <arg name="robot_namespace"        value="$(arg robot_namespace)"/>
    <arg name="robot_model_name"       value="$(arg robot_model_name)"/>
    <arg name="enable_ekf"             value="$(arg enable_ekf)"/>
    <arg name="world"                  value="$(arg world)"/>
    <arg name="world_file"             value="$(arg world_file)"/>
    <arg name="laser_enabled"					 value="$(arg laser_enabled)"/>
    <arg name="x"                      value="$(arg x)"/>
    <arg name="y"                      value="$(arg y)"/>
    <arg name="z"                      value="$(arg z)"/>
    <arg name="roll"                   value="$(arg roll)"/>
    <arg name="pitch"                  value="$(arg pitch)"/>
    <arg name="yaw"                    value="$(arg yaw)"/>
    <arg name="paused"                 value="$(arg paused)"/>
    <arg name="use_sim_time"           value="$(arg use_sim_time)"/>
    <arg name="debug"                  value="$(arg debug)"/>
    <arg name="verbose"                value="$(arg verbose)"/>
    <arg name="laser_scan_min_height"  value="$(arg laser_scan_min_height)"/>
    <arg name="laser_scan_max_height"  value="$(arg laser_scan_max_height)"/>
    <arg name="run_gui"                value="$(arg run_gui)"/>
    <arg name="robot_description"      value="$(arg robot_description)"/>
  </include>

  <group if="$(eval arg ('use_teleop_twist_keyboard') == 0)">
    <node name="pub_node" pkg="set_speed" type="pub_node" />
  </group>

  <group if="$(arg use_teleop_twist_keyboard)">
    <node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
  </group>
  

</launch>